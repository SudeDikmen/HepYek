import 'package:flutter/material.dart';
import 'package:url_launcher/url_launcher.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'My App',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> with SingleTickerProviderStateMixin {
  TabController _tabController;

  List<User> users = [
    User('John Doe', Icons.account_circle),
    User('Jane Smith', Icons.account_circle),
    User('Alice Johnson', Icons.account_circle),
    User('Bob Williams', Icons.account_circle),
    User('Emily Davis', Icons.account_circle),
  ];

  List<Chat> chats = [
    Chat('John Doe', 'Hello!', Icons.account_circle),
    Chat('Jane Smith', 'Hi there!', Icons.account_circle),
    Chat('Alice Johnson', 'How are you?', Icons.account_circle),
  ];

  void callEmergencyNumber(String number) async {
    final url = 'tel:$number';
    if (await canLaunch(url)) {
      await launch(url);
    } else {
      showDialog(
        context: context,
        builder: (BuildContext context) {
          return AlertDialog(
            title: Text('Hata'),
            content: Text('Numara aranamıyor.'),
            actions: [
              FlatButton(
                child: Text('Kapat'),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              ),
            ],
          );
        },
      );
    }
  }

  @override
  void initState() {
    super.initState();
    _tabController = TabController(length: 5, vsync: this);
  }

  @override
  void dispose() {
    _tabController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
        title: Text('My App'),
    ),
    body: TabBarView(
    controller: _tabController,
    children: [
    Container(
    color: Colors.red,
    child: Column(
    mainAxisAlignment: MainAxisAlignment.center,
    children: [
    Icon(Icons.account_circle, size: 100),
    SizedBox(height: 16),
    Text(
    'Kullanıcı Bilgileri',
    style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
    ),
    SizedBox(height: 16),
    Text(
    'Kullanıcı Bilgileri',
    style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
    ),
    SizedBox(height: 16),
    Text(
    'Bilgiler Gizli Tutuluyor',
    style: TextStyle(fontSize: 18),
    ),
    ],
    ),
    ),
    Container(
    color: Colors.green,
    child: ListView.builder(
    itemCount: users.length,
    itemBuilder: (context, index) {
    final user = users[index];
    return ListTile(
    leading: Icon(user.icon),
    title: Text(user.name),
    );
    },
    ),
    ),
    Container(
    color: Colors.blue,
    child: Column(
    children: [
    Expanded(
    child: ListView.builder(
    itemCount: chats.length,
    itemBuilder: (context, index) {
    final chat = chats[index];
    return ListTile(
    leading: Icon(chat.icon),
    title: Text(chat.name),
    subtitle: Text(chat.message),
    );
    },
    ),
    ),
    ],
    ),
    ),
    Container(
    color: Colors.yellow,
    child: Center(
    child: Text('Destek'),
    ),
    ),
    Container(
    color: Colors.orange,
    child: Column(
    mainAxisAlignment: MainAxisAlignment.center,
    children: [
    Icon(Icons.warning, size: 100),
    SizedBox(height: 16),
    Text(
    'Hesap Ayarları',
    style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
    ),
    SizedBox(height: 16),
    Text(
    'Dil: Türkçe',
    style: TextStyle(fontSize: 18),
    ),
    Text(
    'Temayı Koyu Mod Yap',
    style: TextStyle(fontSize: 18),
    ),
    ],
    ),
    ),
    ],
    ),
      floatingActionButton: _tabController.index == 2
          ? FloatingActionButton(
        onPressed: () {
          // Yeni sohbet oluşturma işlemleri
        },
        child: Icon(Icons.add),
      )
          : null,
      bottomNavigationBar: TabBar(
        controller: _tabController,
        tabs: [
          Tab(icon: Icon(Icons.account_circle), text: 'Hesabım'),
          Tab(icon: Icon(Icons.people), text: 'Kullanıcılar'),
          Tab(icon: Icon(Icons.chat), text: 'Sohbet'),
          Tab(icon: Icon(Icons.support), text: 'Destek'),
          Tab(icon: Icon(Icons.warning), text: 'Acil Yardım'),
        ],
      ),
    );
  }
}
class User {
  final String name;
  final IconData icon;

  User(this.name, this.icon);
}

class Chat {
  final String name;
  final String message;
  final IconData icon;

  Chat(this.name, this.message, this.icon);
}
